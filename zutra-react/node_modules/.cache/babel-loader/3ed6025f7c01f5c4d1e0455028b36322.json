{"ast":null,"code":"export class InputSwitchElement extends HTMLElement {\n  constructor() {\n    super();\n    this.name = void 0;\n    this.tabIndex = void 0;\n    this.tabIndex = 0;\n    this.name = this.getAttribute(\"name\");\n  }\n\n  isConnectedCallback() {\n    this.innerHTML = `\n        <input type='hidden' name='${this.name}' value='false'>\n        <input type='checkbox' name='${this.name}' value='true'>\n        <span aria-hidden=\"true\"></span>`;\n    this.addEventListener('click', e => this.inputListener(e));\n  }\n\n  inputListener(e) {\n    const checkbox = this.querySelector(\"[type='checkbox']\");\n    if (checkbox === null) return;\n    checkbox.checked = !checkbox.checked;\n  }\n\n}\ncustomElements.define(\"input-switch\", InputSwitchElement);","map":{"version":3,"sources":["C:/Users/Acivev/Desktop/Zutra/zutra-react/src/single/SISwitch.tsx"],"names":["InputSwitchElement","HTMLElement","constructor","name","tabIndex","getAttribute","isConnectedCallback","innerHTML","addEventListener","e","inputListener","checkbox","querySelector","checked","customElements","define"],"mappings":"AAAA,OAAO,MAAMA,kBAAN,SAAiCC,WAAjC,CAA4C;AAI/CC,EAAAA,WAAW,GAAG;AACV;AADU,SAHNC,IAGM;AAAA,SAFPC,QAEO;AAEV,SAAKA,QAAL,GAAgB,CAAhB;AACA,SAAKD,IAAL,GAAW,KAAKE,YAAL,CAAkB,MAAlB,CAAX;AAEH;;AAEDC,EAAAA,mBAAmB,GAAE;AACjB,SAAKC,SAAL,GAAkB;AAC1B,qCAAqC,KAAKJ,IAAK;AAC/C,uCAAuC,KAAKA,IAAK;AACjD,yCAHQ;AAIA,SAAKK,gBAAL,CAAsB,OAAtB,EAA+BC,CAAC,IAAG,KAAKC,aAAL,CAAmBD,CAAnB,CAAnC;AACH;;AAEOC,EAAAA,aAAa,CAACD,CAAD,EAAW;AAC5B,UAAME,QAAiC,GAAG,KAAKC,aAAL,CAAmB,mBAAnB,CAA1C;AACA,QAAID,QAAQ,KAAK,IAAjB,EACI;AACJA,IAAAA,QAAQ,CAACE,OAAT,GAAmB,CAACF,QAAQ,CAACE,OAA7B;AACH;;AAxB8C;AA2BnDC,cAAc,CAACC,MAAf,CAAsB,cAAtB,EAAsCf,kBAAtC","sourcesContent":["export class InputSwitchElement extends HTMLElement{\r\n    private name: string | null;\r\n    public tabIndex: number;\r\n\r\n    constructor() {\r\n        super();\r\n        this.tabIndex = 0;\r\n        this.name= this.getAttribute(\"name\");\r\n\r\n    }\r\n\r\n    isConnectedCallback(){\r\n        this.innerHTML = `\r\n        <input type='hidden' name='${this.name}' value='false'>\r\n        <input type='checkbox' name='${this.name}' value='true'>\r\n        <span aria-hidden=\"true\"></span>`;\r\n        this.addEventListener('click', e =>this.inputListener(e))\r\n    }\r\n\r\n    private inputListener(e: Event) {\r\n        const checkbox: HTMLInputElement | null = this.querySelector(\"[type='checkbox']\");\r\n        if (checkbox === null)\r\n            return;\r\n        checkbox.checked = !checkbox.checked;\r\n    }\r\n}\r\n\r\ncustomElements.define(\"input-switch\", InputSwitchElement);\r\n"]},"metadata":{},"sourceType":"module"}